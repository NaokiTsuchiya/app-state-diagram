#!/usr/bin/env php
<?php

declare(strict_types=1);

use Koriym\AppStateDiagram\AlpsProfile;
use Koriym\AppStateDiagram\AppStateDiagram;
use Koriym\AppStateDiagram\DrawDiagram;
use Koriym\AppStateDiagram\DumpDocs;
use Koriym\AppStateDiagram\IndexPage;

foreach ([__DIR__ . '/../../../autoload.php', __DIR__ . '/../vendor/autoload.php'] as $file) {
    if (file_exists($file)) {
        require $file;

        break;
    }
}

$watchMode = (in_array('watch', array_keys(getopt('', ['watch']))));
$alpsFile = $argv[$argc - 1];
$profile = realpath($alpsFile);
if ($argc === 1) {
    echo 'usage: asd <alps> [--watch]' . PHP_EOL;
    exit(1);
}
if (! $profile) {
    echo 'Not readable: ' . $alpsFile . PHP_EOL;
    exit(1);
}
if ($watchMode) {
    chdir(dirname(__DIR__) . '/asd-sync');
    passthru('npm start -- --profile ' . $profile);
    exit();
}
try {
    $alpsProfile = new AlpsProfile($profile);
    $dot = (new DrawDiagram)($alpsProfile);
    // dump docs/
    (new DumpDocs())($alpsProfile->descriptors, $profile, $alpsProfile->schema);
} catch (\Exception $e) {
    $path = explode('\\', get_class($e));
    $msg = sprintf("%s: %s\n", end($path), $e->getMessage());
    file_put_contents('php://stderr', $msg);
    exit(1);
}
$file = str_replace('.json', '.dot', $profile);
file_put_contents($file, $dot);

$svgFile = str_replace(['xml', 'json'], 'svg', $profile);
$cmd = "dot -Tsvg {$file} -o {$svgFile}";
passthru($cmd, $status);
if ($status !== 0) {
    echo 'Warning: Graphviz error. https://graphviz.org/download/' . PHP_EOL;
}

$indexHtml = dirname($profile) . '/index.html';
file_put_contents($indexHtml, (new IndexPage($alpsProfile))->index);
echo "ASD generated. {$indexHtml}" . PHP_EOL;
