#!/usr/bin/env php
<?php

declare(strict_types=1);

use Koriym\AppStateDiagram\AlpsProfile;
use Koriym\AppStateDiagram\AppStateDiagram;
use Koriym\AppStateDiagram\DrawDiagram;
use Koriym\AppStateDiagram\DumpDocs;
use Koriym\AppStateDiagram\IndexPage;
use Koriym\AppStateDiagram\TaggedAlpsProfile;

foreach ([__DIR__ . '/../../../autoload.php', __DIR__ . '/../vendor/autoload.php'] as $file) {
    if (file_exists($file)) {
        require $file;

        break;
    }
}

$options = getopt('', ['watch:', 'andTag:', 'orTag:', 'color:']);
$watchMode = isset($options['watch']);
$andTag = isset($options['andTag']) && is_string($options['andTag']) ? explode(',', $options['andTag']) : [];
$orTag = isset($options['orTag']) && is_string($options['orTag']) ? explode(',', $options['orTag']) : [];
$color = isset($options['color']) && is_string($options['color']) ? $options['color'] : null;
$hasTag = $andTag !== [] || $orTag !== [];
$alpsFile = $argv[$argc - 1];
$profile = realpath($alpsFile);
if ($argc === 1) {
    echo 'usage: asd [--watch] [--andTag=tag1,tag2] [--orTag=tag3] [--color=red] <alps>' . PHP_EOL;
    exit(1);
}
if (! $profile) {
    echo 'Not readable: ' . $alpsFile . PHP_EOL;
    exit(1);
}
if ($watchMode) {
    chdir(dirname(__DIR__) . '/asd-sync');
    $isFirstRun = ! is_dir(dirname(__DIR__) . '/asd-sync/node_modules');
    if ($isFirstRun) {
        passthru('npm install');
    }
    passthru('npm start -- --profile ' . $profile);
    exit(0);
}
try {
    $alpsProfile = new AlpsProfile($profile);
    $dot = (new DrawDiagram)($alpsProfile);
    // dump docs/
    (new DumpDocs())($alpsProfile->descriptors, $profile, $alpsProfile->schema);

    if ($hasTag) {
        $filteredProfile = new TaggedAlpsProfile($alpsProfile, $orTag, $andTag);
        $tagDot = isset($color) ? (new DrawDiagram())($alpsProfile, $filteredProfile, $color) : (new DrawDiagram())($filteredProfile);
    }
} catch (\Exception $e) {
    $path = explode('\\', get_class($e));
    $msg = sprintf("%s: %s\n", end($path), $e->getMessage());
    file_put_contents('php://stderr', $msg);
    exit(1);
}
$file = str_replace('.json', '.dot', $profile);
file_put_contents($file, $dot);

$svgFile = str_replace(['xml', 'json'], 'svg', $profile);
$cmd = "dot -Tsvg {$file} -o {$svgFile}";
passthru($cmd, $status);
if ($status !== 0) {
    echo 'Warning: Graphviz error. https://graphviz.org/download/' . PHP_EOL;
}

$indexHtml = dirname($profile) . '/index.html';
file_put_contents($indexHtml, (new IndexPage($alpsProfile))->index);
echo "ASD generated. {$indexHtml}" . PHP_EOL;

if (!isset($tagDot)) {
  exit(0);
}

$tagFile = dirname($file) . '/tag_' . basename($file);
file_put_contents($tagFile, $tagDot);
$filteredSvg = dirname($svgFile) . '/tag_' . basename($svgFile);
$cmd = "dot -Tsvg {$tagFile} -o {$filteredSvg}";
passthru($cmd, $status);
if ($status !== 0) {
    echo 'Warning: Graphviz error. https://graphviz.org/download/' . PHP_EOL;
}
echo "Tagged ASD generated. {$filteredSvg}" . PHP_EOL;
